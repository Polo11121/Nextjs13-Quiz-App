generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])

  @@index([userId])
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image    String?
  accounts Account[]
  sessions Session[]
  quizzes Quiz[]
}

enum QuizType { 
  mcq
  open_ended
}

model Quiz{
  id String @id @default(cuid())
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  timeStart DateTime
  topic String
  timeEnd DateTime?
  gameType QuizType
  questions Question[]

  @@index([userId])
}

model Question{
  id String @id @default(cuid())
  question String
  answer String
  quizId String
  quiz Quiz @relation(fields: [quizId], references: [id], onDelete: Cascade)
  option Json?
  procentageCorect Float?
  questionType QuizType
  userAnswer String?
  IsCorrect Boolean?

  @@index([quizId])
}